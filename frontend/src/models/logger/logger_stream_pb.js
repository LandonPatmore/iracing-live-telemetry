// source: logger/logger_stream.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.com.landonpatmore.models.logger.LoggerCar', null, global);
goog.exportSymbol('proto.com.landonpatmore.models.logger.LoggerCompetitor', null, global);
goog.exportSymbol('proto.com.landonpatmore.models.logger.LoggerInfo', null, global);
goog.exportSymbol('proto.com.landonpatmore.models.logger.LoggerSession', null, global);
goog.exportSymbol('proto.com.landonpatmore.models.logger.LoggerWeather', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.landonpatmore.models.logger.LoggerCar = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.landonpatmore.models.logger.LoggerCar.repeatedFields_, null);
};
goog.inherits(proto.com.landonpatmore.models.logger.LoggerCar, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.landonpatmore.models.logger.LoggerCar.displayName = 'proto.com.landonpatmore.models.logger.LoggerCar';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.landonpatmore.models.logger.LoggerSession = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.landonpatmore.models.logger.LoggerSession, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.landonpatmore.models.logger.LoggerSession.displayName = 'proto.com.landonpatmore.models.logger.LoggerSession';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.landonpatmore.models.logger.LoggerWeather = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.landonpatmore.models.logger.LoggerWeather, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.landonpatmore.models.logger.LoggerWeather.displayName = 'proto.com.landonpatmore.models.logger.LoggerWeather';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.landonpatmore.models.logger.LoggerCompetitor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.landonpatmore.models.logger.LoggerCompetitor.displayName = 'proto.com.landonpatmore.models.logger.LoggerCompetitor';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.landonpatmore.models.logger.LoggerInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.landonpatmore.models.logger.LoggerInfo.repeatedFields_, null);
};
goog.inherits(proto.com.landonpatmore.models.logger.LoggerInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.landonpatmore.models.logger.LoggerInfo.displayName = 'proto.com.landonpatmore.models.logger.LoggerInfo';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.landonpatmore.models.logger.LoggerCar.repeatedFields_ = [4,5,6,7,8,9,10,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.toObject = function(opt_includeInstance) {
  return proto.com.landonpatmore.models.logger.LoggerCar.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.landonpatmore.models.logger.LoggerCar} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.landonpatmore.models.logger.LoggerCar.toObject = function(includeInstance, msg) {
  var f, obj = {
    fuellevel: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    fuelpercentage: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    fueluseperhour: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    lftirewearList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 4)) == null ? undefined : f,
    lrtirewearList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 5)) == null ? undefined : f,
    rftirewearList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 6)) == null ? undefined : f,
    rrtirewearList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 7)) == null ? undefined : f,
    lftiretempList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 8)) == null ? undefined : f,
    lrtiretempList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 9)) == null ? undefined : f,
    rftiretempList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 10)) == null ? undefined : f,
    rrtiretempList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 11)) == null ? undefined : f,
    tiresetsavailable: jspb.Message.getFieldWithDefault(msg, 12, 0),
    tiresetsused: jspb.Message.getFieldWithDefault(msg, 13, 0),
    pitservicestatus: jspb.Message.getFieldWithDefault(msg, 14, 0),
    flagstatus: jspb.Message.getFieldWithDefault(msg, 15, 0),
    enginewarnings: jspb.Message.getFieldWithDefault(msg, 16, 0),
    carsinproximity: jspb.Message.getFieldWithDefault(msg, 17, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar}
 */
proto.com.landonpatmore.models.logger.LoggerCar.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.landonpatmore.models.logger.LoggerCar;
  return proto.com.landonpatmore.models.logger.LoggerCar.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.landonpatmore.models.logger.LoggerCar} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar}
 */
proto.com.landonpatmore.models.logger.LoggerCar.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFuellevel(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFuelpercentage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFueluseperhour(value);
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLftirewear(values[i]);
      }
      break;
    case 5:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLrtirewear(values[i]);
      }
      break;
    case 6:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRftirewear(values[i]);
      }
      break;
    case 7:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRrtirewear(values[i]);
      }
      break;
    case 8:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLftiretemp(values[i]);
      }
      break;
    case 9:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLrtiretemp(values[i]);
      }
      break;
    case 10:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRftiretemp(values[i]);
      }
      break;
    case 11:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRrtiretemp(values[i]);
      }
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTiresetsavailable(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTiresetsused(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPitservicestatus(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFlagstatus(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEnginewarnings(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCarsinproximity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.landonpatmore.models.logger.LoggerCar.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.landonpatmore.models.logger.LoggerCar} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.landonpatmore.models.logger.LoggerCar.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getLftirewearList();
  if (f.length > 0) {
    writer.writePackedFloat(
      4,
      f
    );
  }
  f = message.getLrtirewearList();
  if (f.length > 0) {
    writer.writePackedFloat(
      5,
      f
    );
  }
  f = message.getRftirewearList();
  if (f.length > 0) {
    writer.writePackedFloat(
      6,
      f
    );
  }
  f = message.getRrtirewearList();
  if (f.length > 0) {
    writer.writePackedFloat(
      7,
      f
    );
  }
  f = message.getLftiretempList();
  if (f.length > 0) {
    writer.writePackedFloat(
      8,
      f
    );
  }
  f = message.getLrtiretempList();
  if (f.length > 0) {
    writer.writePackedFloat(
      9,
      f
    );
  }
  f = message.getRftiretempList();
  if (f.length > 0) {
    writer.writePackedFloat(
      10,
      f
    );
  }
  f = message.getRrtiretempList();
  if (f.length > 0) {
    writer.writePackedFloat(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeInt32(
      17,
      f
    );
  }
};


/**
 * optional float fuelLevel = 1;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.getFuellevel = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.setFuellevel = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.clearFuellevel = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.hasFuellevel = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float fuelPercentage = 2;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.getFuelpercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.setFuelpercentage = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.clearFuelpercentage = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.hasFuelpercentage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float fuelUsePerHour = 3;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.getFueluseperhour = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.setFueluseperhour = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.clearFueluseperhour = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.hasFueluseperhour = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated float lfTireWear = 4;
 * @return {!Array<number>}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.getLftirewearList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.setLftirewearList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.addLftirewear = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.clearLftirewearList = function() {
  return this.setLftirewearList([]);
};


/**
 * repeated float lrTireWear = 5;
 * @return {!Array<number>}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.getLrtirewearList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.setLrtirewearList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.addLrtirewear = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.clearLrtirewearList = function() {
  return this.setLrtirewearList([]);
};


/**
 * repeated float rfTireWear = 6;
 * @return {!Array<number>}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.getRftirewearList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 6));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.setRftirewearList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.addRftirewear = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.clearRftirewearList = function() {
  return this.setRftirewearList([]);
};


/**
 * repeated float rrTireWear = 7;
 * @return {!Array<number>}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.getRrtirewearList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 7));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.setRrtirewearList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.addRrtirewear = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.clearRrtirewearList = function() {
  return this.setRrtirewearList([]);
};


/**
 * repeated float lfTireTemp = 8;
 * @return {!Array<number>}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.getLftiretempList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.setLftiretempList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.addLftiretemp = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.clearLftiretempList = function() {
  return this.setLftiretempList([]);
};


/**
 * repeated float lrTireTemp = 9;
 * @return {!Array<number>}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.getLrtiretempList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 9));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.setLrtiretempList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.addLrtiretemp = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.clearLrtiretempList = function() {
  return this.setLrtiretempList([]);
};


/**
 * repeated float rfTireTemp = 10;
 * @return {!Array<number>}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.getRftiretempList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 10));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.setRftiretempList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.addRftiretemp = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.clearRftiretempList = function() {
  return this.setRftiretempList([]);
};


/**
 * repeated float rrTireTemp = 11;
 * @return {!Array<number>}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.getRrtiretempList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 11));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.setRrtiretempList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.addRrtiretemp = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.clearRrtiretempList = function() {
  return this.setRrtiretempList([]);
};


/**
 * optional int32 tireSetsAvailable = 12;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.getTiresetsavailable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.setTiresetsavailable = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.clearTiresetsavailable = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.hasTiresetsavailable = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int32 tireSetsUsed = 13;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.getTiresetsused = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.setTiresetsused = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.clearTiresetsused = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.hasTiresetsused = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional int32 pitServiceStatus = 14;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.getPitservicestatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.setPitservicestatus = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.clearPitservicestatus = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.hasPitservicestatus = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional int32 flagStatus = 15;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.getFlagstatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.setFlagstatus = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.clearFlagstatus = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.hasFlagstatus = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional int32 engineWarnings = 16;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.getEnginewarnings = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.setEnginewarnings = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.clearEnginewarnings = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.hasEnginewarnings = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional int32 carsInProximity = 17;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.getCarsinproximity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.setCarsinproximity = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCar} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.clearCarsinproximity = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCar.prototype.hasCarsinproximity = function() {
  return jspb.Message.getField(this, 17) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.toObject = function(opt_includeInstance) {
  return proto.com.landonpatmore.models.logger.LoggerSession.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.landonpatmore.models.logger.LoggerSession} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.landonpatmore.models.logger.LoggerSession.toObject = function(includeInstance, msg) {
  var f, obj = {
    tick: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timeofday: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    timeremaining: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    totallaps: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    lapsremaining: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.landonpatmore.models.logger.LoggerSession}
 */
proto.com.landonpatmore.models.logger.LoggerSession.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.landonpatmore.models.logger.LoggerSession;
  return proto.com.landonpatmore.models.logger.LoggerSession.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.landonpatmore.models.logger.LoggerSession} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.landonpatmore.models.logger.LoggerSession}
 */
proto.com.landonpatmore.models.logger.LoggerSession.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTick(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTimeofday(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTimeremaining(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotallaps(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLapsremaining(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.landonpatmore.models.logger.LoggerSession.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.landonpatmore.models.logger.LoggerSession} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.landonpatmore.models.logger.LoggerSession.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeFloat(
      5,
      f
    );
  }
};


/**
 * optional int32 tick = 1;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.getTick = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerSession} returns this
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.setTick = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerSession} returns this
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.clearTick = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.hasTick = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float timeOfDay = 2;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.getTimeofday = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerSession} returns this
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.setTimeofday = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerSession} returns this
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.clearTimeofday = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.hasTimeofday = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float timeRemaining = 3;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.getTimeremaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerSession} returns this
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.setTimeremaining = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerSession} returns this
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.clearTimeremaining = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.hasTimeremaining = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float totalLaps = 4;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.getTotallaps = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerSession} returns this
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.setTotallaps = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerSession} returns this
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.clearTotallaps = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.hasTotallaps = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional float lapsRemaining = 5;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.getLapsremaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerSession} returns this
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.setLapsremaining = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerSession} returns this
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.clearLapsremaining = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerSession.prototype.hasLapsremaining = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.landonpatmore.models.logger.LoggerWeather.prototype.toObject = function(opt_includeInstance) {
  return proto.com.landonpatmore.models.logger.LoggerWeather.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.landonpatmore.models.logger.LoggerWeather} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.landonpatmore.models.logger.LoggerWeather.toObject = function(includeInstance, msg) {
  var f, obj = {
    airtemp: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    tracktemp: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    winddirection: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    windvelocity: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.landonpatmore.models.logger.LoggerWeather}
 */
proto.com.landonpatmore.models.logger.LoggerWeather.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.landonpatmore.models.logger.LoggerWeather;
  return proto.com.landonpatmore.models.logger.LoggerWeather.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.landonpatmore.models.logger.LoggerWeather} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.landonpatmore.models.logger.LoggerWeather}
 */
proto.com.landonpatmore.models.logger.LoggerWeather.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAirtemp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTracktemp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWinddirection(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWindvelocity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.landonpatmore.models.logger.LoggerWeather.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.landonpatmore.models.logger.LoggerWeather.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.landonpatmore.models.logger.LoggerWeather} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.landonpatmore.models.logger.LoggerWeather.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeFloat(
      4,
      f
    );
  }
};


/**
 * optional float airTemp = 1;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerWeather.prototype.getAirtemp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerWeather} returns this
 */
proto.com.landonpatmore.models.logger.LoggerWeather.prototype.setAirtemp = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerWeather} returns this
 */
proto.com.landonpatmore.models.logger.LoggerWeather.prototype.clearAirtemp = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerWeather.prototype.hasAirtemp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float trackTemp = 2;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerWeather.prototype.getTracktemp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerWeather} returns this
 */
proto.com.landonpatmore.models.logger.LoggerWeather.prototype.setTracktemp = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerWeather} returns this
 */
proto.com.landonpatmore.models.logger.LoggerWeather.prototype.clearTracktemp = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerWeather.prototype.hasTracktemp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float windDirection = 3;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerWeather.prototype.getWinddirection = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerWeather} returns this
 */
proto.com.landonpatmore.models.logger.LoggerWeather.prototype.setWinddirection = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerWeather} returns this
 */
proto.com.landonpatmore.models.logger.LoggerWeather.prototype.clearWinddirection = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerWeather.prototype.hasWinddirection = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float windVelocity = 4;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerWeather.prototype.getWindvelocity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerWeather} returns this
 */
proto.com.landonpatmore.models.logger.LoggerWeather.prototype.setWindvelocity = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerWeather} returns this
 */
proto.com.landonpatmore.models.logger.LoggerWeather.prototype.clearWindvelocity = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerWeather.prototype.hasWindvelocity = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.toObject = function(opt_includeInstance) {
  return proto.com.landonpatmore.models.logger.LoggerCompetitor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.landonpatmore.models.logger.LoggerCompetitor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.toObject = function(includeInstance, msg) {
  var f, obj = {
    caridx: jspb.Message.getFieldWithDefault(msg, 1, 0),
    carclass: jspb.Message.getFieldWithDefault(msg, 2, 0),
    carclassposition: jspb.Message.getFieldWithDefault(msg, 3, 0),
    intervalbehindleader: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    percentagearoundtrack: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    onpitroad: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    position: jspb.Message.getFieldWithDefault(msg, 7, 0),
    trackstatus: jspb.Message.getFieldWithDefault(msg, 8, 0),
    bestlapnum: jspb.Message.getFieldWithDefault(msg, 9, 0),
    bestlaptime: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    lapscompleted: jspb.Message.getFieldWithDefault(msg, 11, 0),
    lastlaptime: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    username: jspb.Message.getFieldWithDefault(msg, 13, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 14, 0),
    teamid: jspb.Message.getFieldWithDefault(msg, 15, 0),
    teamname: jspb.Message.getFieldWithDefault(msg, 16, ""),
    carnumber: jspb.Message.getFieldWithDefault(msg, 17, ""),
    carid: jspb.Message.getFieldWithDefault(msg, 18, 0),
    irating: jspb.Message.getFieldWithDefault(msg, 19, 0),
    license: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.landonpatmore.models.logger.LoggerCompetitor;
  return proto.com.landonpatmore.models.logger.LoggerCompetitor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.landonpatmore.models.logger.LoggerCompetitor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCaridx(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCarclass(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCarclassposition(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setIntervalbehindleader(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPercentagearoundtrack(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnpitroad(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPosition(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTrackstatus(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBestlapnum(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBestlaptime(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLapscompleted(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLastlaptime(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserid(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTeamid(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamname(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setCarnumber(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCarid(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIrating(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setLicense(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.landonpatmore.models.logger.LoggerCompetitor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.landonpatmore.models.logger.LoggerCompetitor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional int32 carIdx = 1;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.getCaridx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.setCaridx = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.clearCaridx = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.hasCaridx = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 carClass = 2;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.getCarclass = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.setCarclass = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.clearCarclass = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.hasCarclass = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 carClassPosition = 3;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.getCarclassposition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.setCarclassposition = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.clearCarclassposition = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.hasCarclassposition = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float intervalBehindLeader = 4;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.getIntervalbehindleader = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.setIntervalbehindleader = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.clearIntervalbehindleader = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.hasIntervalbehindleader = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional float percentageAroundTrack = 5;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.getPercentagearoundtrack = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.setPercentagearoundtrack = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.clearPercentagearoundtrack = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.hasPercentagearoundtrack = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool onPitRoad = 6;
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.getOnpitroad = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.setOnpitroad = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.clearOnpitroad = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.hasOnpitroad = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 position = 7;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.getPosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.setPosition = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.clearPosition = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 trackStatus = 8;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.getTrackstatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.setTrackstatus = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.clearTrackstatus = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.hasTrackstatus = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 bestLapNum = 9;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.getBestlapnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.setBestlapnum = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.clearBestlapnum = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.hasBestlapnum = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional float bestLapTime = 10;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.getBestlaptime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.setBestlaptime = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.clearBestlaptime = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.hasBestlaptime = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int32 lapsCompleted = 11;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.getLapscompleted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.setLapscompleted = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.clearLapscompleted = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.hasLapscompleted = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional float lastLapTime = 12;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.getLastlaptime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.setLastlaptime = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.clearLastlaptime = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.hasLastlaptime = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string userName = 13;
 * @return {string}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional int32 userId = 14;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.setUserid = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.clearUserid = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.hasUserid = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional int32 teamId = 15;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.getTeamid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.setTeamid = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.clearTeamid = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.hasTeamid = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string teamName = 16;
 * @return {string}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.getTeamname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.setTeamname = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.clearTeamname = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.hasTeamname = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string carNumber = 17;
 * @return {string}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.getCarnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.setCarnumber = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.clearCarnumber = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.hasCarnumber = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional int32 carId = 18;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.getCarid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.setCarid = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.clearCarid = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.hasCarid = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional int32 iRating = 19;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.getIrating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.setIrating = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.clearIrating = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.hasIrating = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string license = 20;
 * @return {string}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.getLicense = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.setLicense = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor} returns this
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.clearLicense = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerCompetitor.prototype.hasLicense = function() {
  return jspb.Message.getField(this, 20) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.landonpatmore.models.logger.LoggerInfo.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.com.landonpatmore.models.logger.LoggerInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.landonpatmore.models.logger.LoggerInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.landonpatmore.models.logger.LoggerInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    tick: jspb.Message.getFieldWithDefault(msg, 1, 0),
    car: (f = msg.getCar()) && proto.com.landonpatmore.models.logger.LoggerCar.toObject(includeInstance, f),
    session: (f = msg.getSession()) && proto.com.landonpatmore.models.logger.LoggerSession.toObject(includeInstance, f),
    weather: (f = msg.getWeather()) && proto.com.landonpatmore.models.logger.LoggerWeather.toObject(includeInstance, f),
    competitorsList: jspb.Message.toObjectList(msg.getCompetitorsList(),
    proto.com.landonpatmore.models.logger.LoggerCompetitor.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.landonpatmore.models.logger.LoggerInfo}
 */
proto.com.landonpatmore.models.logger.LoggerInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.landonpatmore.models.logger.LoggerInfo;
  return proto.com.landonpatmore.models.logger.LoggerInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.landonpatmore.models.logger.LoggerInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.landonpatmore.models.logger.LoggerInfo}
 */
proto.com.landonpatmore.models.logger.LoggerInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTick(value);
      break;
    case 2:
      var value = new proto.com.landonpatmore.models.logger.LoggerCar;
      reader.readMessage(value,proto.com.landonpatmore.models.logger.LoggerCar.deserializeBinaryFromReader);
      msg.setCar(value);
      break;
    case 3:
      var value = new proto.com.landonpatmore.models.logger.LoggerSession;
      reader.readMessage(value,proto.com.landonpatmore.models.logger.LoggerSession.deserializeBinaryFromReader);
      msg.setSession(value);
      break;
    case 4:
      var value = new proto.com.landonpatmore.models.logger.LoggerWeather;
      reader.readMessage(value,proto.com.landonpatmore.models.logger.LoggerWeather.deserializeBinaryFromReader);
      msg.setWeather(value);
      break;
    case 5:
      var value = new proto.com.landonpatmore.models.logger.LoggerCompetitor;
      reader.readMessage(value,proto.com.landonpatmore.models.logger.LoggerCompetitor.deserializeBinaryFromReader);
      msg.addCompetitors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.landonpatmore.models.logger.LoggerInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.landonpatmore.models.logger.LoggerInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.landonpatmore.models.logger.LoggerInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCar();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.landonpatmore.models.logger.LoggerCar.serializeBinaryToWriter
    );
  }
  f = message.getSession();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.com.landonpatmore.models.logger.LoggerSession.serializeBinaryToWriter
    );
  }
  f = message.getWeather();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.com.landonpatmore.models.logger.LoggerWeather.serializeBinaryToWriter
    );
  }
  f = message.getCompetitorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.com.landonpatmore.models.logger.LoggerCompetitor.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 tick = 1;
 * @return {number}
 */
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.getTick = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerInfo} returns this
 */
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.setTick = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerInfo} returns this
 */
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.clearTick = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.hasTick = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LoggerCar car = 2;
 * @return {?proto.com.landonpatmore.models.logger.LoggerCar}
 */
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.getCar = function() {
  return /** @type{?proto.com.landonpatmore.models.logger.LoggerCar} */ (
    jspb.Message.getWrapperField(this, proto.com.landonpatmore.models.logger.LoggerCar, 2));
};


/**
 * @param {?proto.com.landonpatmore.models.logger.LoggerCar|undefined} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerInfo} returns this
*/
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.setCar = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerInfo} returns this
 */
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.clearCar = function() {
  return this.setCar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.hasCar = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LoggerSession session = 3;
 * @return {?proto.com.landonpatmore.models.logger.LoggerSession}
 */
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.getSession = function() {
  return /** @type{?proto.com.landonpatmore.models.logger.LoggerSession} */ (
    jspb.Message.getWrapperField(this, proto.com.landonpatmore.models.logger.LoggerSession, 3));
};


/**
 * @param {?proto.com.landonpatmore.models.logger.LoggerSession|undefined} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerInfo} returns this
*/
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.setSession = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerInfo} returns this
 */
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.clearSession = function() {
  return this.setSession(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.hasSession = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional LoggerWeather weather = 4;
 * @return {?proto.com.landonpatmore.models.logger.LoggerWeather}
 */
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.getWeather = function() {
  return /** @type{?proto.com.landonpatmore.models.logger.LoggerWeather} */ (
    jspb.Message.getWrapperField(this, proto.com.landonpatmore.models.logger.LoggerWeather, 4));
};


/**
 * @param {?proto.com.landonpatmore.models.logger.LoggerWeather|undefined} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerInfo} returns this
*/
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.setWeather = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.landonpatmore.models.logger.LoggerInfo} returns this
 */
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.clearWeather = function() {
  return this.setWeather(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.hasWeather = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated LoggerCompetitor competitors = 5;
 * @return {!Array<!proto.com.landonpatmore.models.logger.LoggerCompetitor>}
 */
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.getCompetitorsList = function() {
  return /** @type{!Array<!proto.com.landonpatmore.models.logger.LoggerCompetitor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.landonpatmore.models.logger.LoggerCompetitor, 5));
};


/**
 * @param {!Array<!proto.com.landonpatmore.models.logger.LoggerCompetitor>} value
 * @return {!proto.com.landonpatmore.models.logger.LoggerInfo} returns this
*/
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.setCompetitorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.com.landonpatmore.models.logger.LoggerCompetitor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.landonpatmore.models.logger.LoggerCompetitor}
 */
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.addCompetitors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.com.landonpatmore.models.logger.LoggerCompetitor, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.landonpatmore.models.logger.LoggerInfo} returns this
 */
proto.com.landonpatmore.models.logger.LoggerInfo.prototype.clearCompetitorsList = function() {
  return this.setCompetitorsList([]);
};


goog.object.extend(exports, proto.com.landonpatmore.models.logger);
