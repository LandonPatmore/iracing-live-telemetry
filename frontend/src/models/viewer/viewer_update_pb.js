// source: viewer/viewer_update.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.com.landonpatmore.models.viewer.update.CarUpdate', null, global);
goog.exportSymbol('proto.com.landonpatmore.models.viewer.update.CompetitorUpdate', null, global);
goog.exportSymbol('proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate', null, global);
goog.exportSymbol('proto.com.landonpatmore.models.viewer.update.RacerUpdate', null, global);
goog.exportSymbol('proto.com.landonpatmore.models.viewer.update.RacersUpdate', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.landonpatmore.models.viewer.update.CarUpdate.repeatedFields_, null);
};
goog.inherits(proto.com.landonpatmore.models.viewer.update.CarUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.landonpatmore.models.viewer.update.CarUpdate.displayName = 'proto.com.landonpatmore.models.viewer.update.CarUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.landonpatmore.models.viewer.update.CompetitorUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.displayName = 'proto.com.landonpatmore.models.viewer.update.CompetitorUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.landonpatmore.models.viewer.update.RacerUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.landonpatmore.models.viewer.update.RacerUpdate.displayName = 'proto.com.landonpatmore.models.viewer.update.RacerUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate.repeatedFields_, null);
};
goog.inherits(proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate.displayName = 'proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.landonpatmore.models.viewer.update.RacersUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.landonpatmore.models.viewer.update.RacersUpdate.repeatedFields_, null);
};
goog.inherits(proto.com.landonpatmore.models.viewer.update.RacersUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.landonpatmore.models.viewer.update.RacersUpdate.displayName = 'proto.com.landonpatmore.models.viewer.update.RacersUpdate';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.repeatedFields_ = [2,3,4,5,6,7,8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.com.landonpatmore.models.viewer.update.CarUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.landonpatmore.models.viewer.update.CarUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    tick: jspb.Message.getFieldWithDefault(msg, 1, 0),
    lftirewearList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    lrtirewearList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 3)) == null ? undefined : f,
    rftirewearList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 4)) == null ? undefined : f,
    rrtirewearList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 5)) == null ? undefined : f,
    lftiretempList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 6)) == null ? undefined : f,
    lrtiretempList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 7)) == null ? undefined : f,
    rftiretempList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 8)) == null ? undefined : f,
    rrtiretempList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 9)) == null ? undefined : f,
    tiresetsavailable: jspb.Message.getFieldWithDefault(msg, 10, 0),
    tiresetsused: jspb.Message.getFieldWithDefault(msg, 11, 0),
    pitservicestatus: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate}
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.landonpatmore.models.viewer.update.CarUpdate;
  return proto.com.landonpatmore.models.viewer.update.CarUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.landonpatmore.models.viewer.update.CarUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate}
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTick(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLftirewear(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLrtirewear(values[i]);
      }
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRftirewear(values[i]);
      }
      break;
    case 5:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRrtirewear(values[i]);
      }
      break;
    case 6:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLftiretemp(values[i]);
      }
      break;
    case 7:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLrtiretemp(values[i]);
      }
      break;
    case 8:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRftiretemp(values[i]);
      }
      break;
    case 9:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRrtiretemp(values[i]);
      }
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTiresetsavailable(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTiresetsused(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPitservicestatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.landonpatmore.models.viewer.update.CarUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.landonpatmore.models.viewer.update.CarUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLftirewearList();
  if (f.length > 0) {
    writer.writePackedFloat(
      2,
      f
    );
  }
  f = message.getLrtirewearList();
  if (f.length > 0) {
    writer.writePackedFloat(
      3,
      f
    );
  }
  f = message.getRftirewearList();
  if (f.length > 0) {
    writer.writePackedFloat(
      4,
      f
    );
  }
  f = message.getRrtirewearList();
  if (f.length > 0) {
    writer.writePackedFloat(
      5,
      f
    );
  }
  f = message.getLftiretempList();
  if (f.length > 0) {
    writer.writePackedFloat(
      6,
      f
    );
  }
  f = message.getLrtiretempList();
  if (f.length > 0) {
    writer.writePackedFloat(
      7,
      f
    );
  }
  f = message.getRftiretempList();
  if (f.length > 0) {
    writer.writePackedFloat(
      8,
      f
    );
  }
  f = message.getRrtiretempList();
  if (f.length > 0) {
    writer.writePackedFloat(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeInt32(
      12,
      f
    );
  }
};


/**
 * optional int32 tick = 1;
 * @return {number}
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.getTick = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.setTick = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.clearTick = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.hasTick = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated float lfTireWear = 2;
 * @return {!Array<number>}
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.getLftirewearList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.setLftirewearList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.addLftirewear = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.clearLftirewearList = function() {
  return this.setLftirewearList([]);
};


/**
 * repeated float lrTireWear = 3;
 * @return {!Array<number>}
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.getLrtirewearList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.setLrtirewearList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.addLrtirewear = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.clearLrtirewearList = function() {
  return this.setLrtirewearList([]);
};


/**
 * repeated float rfTireWear = 4;
 * @return {!Array<number>}
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.getRftirewearList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.setRftirewearList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.addRftirewear = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.clearRftirewearList = function() {
  return this.setRftirewearList([]);
};


/**
 * repeated float rrTireWear = 5;
 * @return {!Array<number>}
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.getRrtirewearList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.setRrtirewearList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.addRrtirewear = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.clearRrtirewearList = function() {
  return this.setRrtirewearList([]);
};


/**
 * repeated float lfTireTemp = 6;
 * @return {!Array<number>}
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.getLftiretempList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 6));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.setLftiretempList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.addLftiretemp = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.clearLftiretempList = function() {
  return this.setLftiretempList([]);
};


/**
 * repeated float lrTireTemp = 7;
 * @return {!Array<number>}
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.getLrtiretempList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 7));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.setLrtiretempList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.addLrtiretemp = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.clearLrtiretempList = function() {
  return this.setLrtiretempList([]);
};


/**
 * repeated float rfTireTemp = 8;
 * @return {!Array<number>}
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.getRftiretempList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.setRftiretempList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.addRftiretemp = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.clearRftiretempList = function() {
  return this.setRftiretempList([]);
};


/**
 * repeated float rrTireTemp = 9;
 * @return {!Array<number>}
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.getRrtiretempList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 9));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.setRrtiretempList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.addRrtiretemp = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.clearRrtiretempList = function() {
  return this.setRrtiretempList([]);
};


/**
 * optional int32 tireSetsAvailable = 10;
 * @return {number}
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.getTiresetsavailable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.setTiresetsavailable = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.clearTiresetsavailable = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.hasTiresetsavailable = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int32 tireSetsUsed = 11;
 * @return {number}
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.getTiresetsused = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.setTiresetsused = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.clearTiresetsused = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.hasTiresetsused = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int32 pitServiceStatus = 12;
 * @return {number}
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.getPitservicestatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.setPitservicestatus = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.CarUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.clearPitservicestatus = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.CarUpdate.prototype.hasPitservicestatus = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    tick: jspb.Message.getFieldWithDefault(msg, 1, 0),
    caridx: jspb.Message.getFieldWithDefault(msg, 2, 0),
    bestlapnum: jspb.Message.getFieldWithDefault(msg, 3, 0),
    bestlaptime: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    lapscompleted: jspb.Message.getFieldWithDefault(msg, 5, 0),
    lastlaptime: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    carclassposition: jspb.Message.getFieldWithDefault(msg, 7, 0),
    position: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.landonpatmore.models.viewer.update.CompetitorUpdate;
  return proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTick(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCaridx(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBestlapnum(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBestlaptime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLapscompleted(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLastlaptime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCarclassposition(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
};


/**
 * optional int32 tick = 1;
 * @return {number}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.getTick = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.setTick = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.clearTick = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.hasTick = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 carIdx = 2;
 * @return {number}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.getCaridx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.setCaridx = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.clearCaridx = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.hasCaridx = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 bestLapNum = 3;
 * @return {number}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.getBestlapnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.setBestlapnum = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.clearBestlapnum = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.hasBestlapnum = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float bestLapTime = 4;
 * @return {number}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.getBestlaptime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.setBestlaptime = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.clearBestlaptime = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.hasBestlaptime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 lapsCompleted = 5;
 * @return {number}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.getLapscompleted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.setLapscompleted = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.clearLapscompleted = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.hasLapscompleted = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional float lastLapTime = 6;
 * @return {number}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.getLastlaptime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.setLastlaptime = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.clearLastlaptime = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.hasLastlaptime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 carClassPosition = 7;
 * @return {number}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.getCarclassposition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.setCarclassposition = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.clearCarclassposition = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.hasCarclassposition = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 position = 8;
 * @return {number}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.getPosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.setPosition = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.clearPosition = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.com.landonpatmore.models.viewer.update.RacerUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    tick: jspb.Message.getFieldWithDefault(msg, 1, 0),
    caridx: jspb.Message.getFieldWithDefault(msg, 2, 0),
    username: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    teamid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    teamname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    carnumber: jspb.Message.getFieldWithDefault(msg, 7, ""),
    carid: jspb.Message.getFieldWithDefault(msg, 8, 0),
    irating: jspb.Message.getFieldWithDefault(msg, 9, 0),
    license: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.landonpatmore.models.viewer.update.RacerUpdate;
  return proto.com.landonpatmore.models.viewer.update.RacerUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTick(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCaridx(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTeamid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamname(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCarnumber(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCarid(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIrating(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLicense(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.landonpatmore.models.viewer.update.RacerUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional int32 tick = 1;
 * @return {number}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.getTick = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.setTick = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.clearTick = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.hasTick = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 carIdx = 2;
 * @return {number}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.getCaridx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.setCaridx = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.clearCaridx = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.hasCaridx = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string userName = 3;
 * @return {string}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 userId = 4;
 * @return {number}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.setUserid = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.clearUserid = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.hasUserid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 teamId = 5;
 * @return {number}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.getTeamid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.setTeamid = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.clearTeamid = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.hasTeamid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string teamName = 6;
 * @return {string}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.getTeamname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.setTeamname = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.clearTeamname = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.hasTeamname = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string carNumber = 7;
 * @return {string}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.getCarnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.setCarnumber = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.clearCarnumber = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.hasCarnumber = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 carId = 8;
 * @return {number}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.getCarid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.setCarid = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.clearCarid = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.hasCarid = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 iRating = 9;
 * @return {number}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.getIrating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.setIrating = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.clearIrating = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.hasIrating = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string license = 10;
 * @return {string}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.getLicense = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.setLicense = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.clearLicense = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.landonpatmore.models.viewer.update.RacerUpdate.prototype.hasLicense = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    competitorsList: jspb.Message.toObjectList(msg.getCompetitorsList(),
    proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate;
  return proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.landonpatmore.models.viewer.update.CompetitorUpdate;
      reader.readMessage(value,proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.deserializeBinaryFromReader);
      msg.addCompetitors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompetitorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.landonpatmore.models.viewer.update.CompetitorUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CompetitorUpdate competitors = 1;
 * @return {!Array<!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate>}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate.prototype.getCompetitorsList = function() {
  return /** @type{!Array<!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.landonpatmore.models.viewer.update.CompetitorUpdate, 1));
};


/**
 * @param {!Array<!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate>} value
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate} returns this
*/
proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate.prototype.setCompetitorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorUpdate}
 */
proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate.prototype.addCompetitors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.landonpatmore.models.viewer.update.CompetitorUpdate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.CompetitorsUpdate.prototype.clearCompetitorsList = function() {
  return this.setCompetitorsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.landonpatmore.models.viewer.update.RacersUpdate.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.landonpatmore.models.viewer.update.RacersUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.com.landonpatmore.models.viewer.update.RacersUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.landonpatmore.models.viewer.update.RacersUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.landonpatmore.models.viewer.update.RacersUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    racersList: jspb.Message.toObjectList(msg.getRacersList(),
    proto.com.landonpatmore.models.viewer.update.RacerUpdate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.landonpatmore.models.viewer.update.RacersUpdate}
 */
proto.com.landonpatmore.models.viewer.update.RacersUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.landonpatmore.models.viewer.update.RacersUpdate;
  return proto.com.landonpatmore.models.viewer.update.RacersUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.landonpatmore.models.viewer.update.RacersUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.landonpatmore.models.viewer.update.RacersUpdate}
 */
proto.com.landonpatmore.models.viewer.update.RacersUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.landonpatmore.models.viewer.update.RacerUpdate;
      reader.readMessage(value,proto.com.landonpatmore.models.viewer.update.RacerUpdate.deserializeBinaryFromReader);
      msg.addRacers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.landonpatmore.models.viewer.update.RacersUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.landonpatmore.models.viewer.update.RacersUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.landonpatmore.models.viewer.update.RacersUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.landonpatmore.models.viewer.update.RacersUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRacersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.landonpatmore.models.viewer.update.RacerUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RacerUpdate racers = 1;
 * @return {!Array<!proto.com.landonpatmore.models.viewer.update.RacerUpdate>}
 */
proto.com.landonpatmore.models.viewer.update.RacersUpdate.prototype.getRacersList = function() {
  return /** @type{!Array<!proto.com.landonpatmore.models.viewer.update.RacerUpdate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.landonpatmore.models.viewer.update.RacerUpdate, 1));
};


/**
 * @param {!Array<!proto.com.landonpatmore.models.viewer.update.RacerUpdate>} value
 * @return {!proto.com.landonpatmore.models.viewer.update.RacersUpdate} returns this
*/
proto.com.landonpatmore.models.viewer.update.RacersUpdate.prototype.setRacersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.landonpatmore.models.viewer.update.RacerUpdate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.landonpatmore.models.viewer.update.RacerUpdate}
 */
proto.com.landonpatmore.models.viewer.update.RacersUpdate.prototype.addRacers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.landonpatmore.models.viewer.update.RacerUpdate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.landonpatmore.models.viewer.update.RacersUpdate} returns this
 */
proto.com.landonpatmore.models.viewer.update.RacersUpdate.prototype.clearRacersList = function() {
  return this.setRacersList([]);
};


goog.object.extend(exports, proto.com.landonpatmore.models.viewer.update);
