//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: protobufs/streaming.proto

package streaming;

@kotlin.jvm.JvmSynthetic
public inline fun car(block: streaming.CarKt.Dsl.() -> kotlin.Unit): streaming.Streaming.Car =
  streaming.CarKt.Dsl._create(streaming.Streaming.Car.newBuilder()).apply { block() }._build()
public object CarKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: streaming.Streaming.Car.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: streaming.Streaming.Car.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): streaming.Streaming.Car = _builder.build()

    /**
     * <code>optional float fuelLevel = 1;</code>
     */
    public var fuelLevel: kotlin.Float
      @JvmName("getFuelLevel")
      get() = _builder.getFuelLevel()
      @JvmName("setFuelLevel")
      set(value) {
        _builder.setFuelLevel(value)
      }
    /**
     * <code>optional float fuelLevel = 1;</code>
     */
    public fun clearFuelLevel() {
      _builder.clearFuelLevel()
    }
    /**
     * <code>optional float fuelLevel = 1;</code>
     * @return Whether the fuelLevel field is set.
     */
    public fun hasFuelLevel(): kotlin.Boolean {
      return _builder.hasFuelLevel()
    }

    /**
     * <code>optional float fuelPercentage = 2;</code>
     */
    public var fuelPercentage: kotlin.Float
      @JvmName("getFuelPercentage")
      get() = _builder.getFuelPercentage()
      @JvmName("setFuelPercentage")
      set(value) {
        _builder.setFuelPercentage(value)
      }
    /**
     * <code>optional float fuelPercentage = 2;</code>
     */
    public fun clearFuelPercentage() {
      _builder.clearFuelPercentage()
    }
    /**
     * <code>optional float fuelPercentage = 2;</code>
     * @return Whether the fuelPercentage field is set.
     */
    public fun hasFuelPercentage(): kotlin.Boolean {
      return _builder.hasFuelPercentage()
    }

    /**
     * <code>optional float fuelUsePerHour = 3;</code>
     */
    public var fuelUsePerHour: kotlin.Float
      @JvmName("getFuelUsePerHour")
      get() = _builder.getFuelUsePerHour()
      @JvmName("setFuelUsePerHour")
      set(value) {
        _builder.setFuelUsePerHour(value)
      }
    /**
     * <code>optional float fuelUsePerHour = 3;</code>
     */
    public fun clearFuelUsePerHour() {
      _builder.clearFuelUsePerHour()
    }
    /**
     * <code>optional float fuelUsePerHour = 3;</code>
     * @return Whether the fuelUsePerHour field is set.
     */
    public fun hasFuelUsePerHour(): kotlin.Boolean {
      return _builder.hasFuelUsePerHour()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class LfTireWearProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated float lfTireWear = 4;</code>
     */
     public val lfTireWear: com.google.protobuf.kotlin.DslList<kotlin.Float, LfTireWearProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getLfTireWearList()
      )
    /**
     * <code>repeated float lfTireWear = 4;</code>
     * @param value The lfTireWear to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addLfTireWear")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, LfTireWearProxy>.add(value: kotlin.Float) {
      _builder.addLfTireWear(value)
    }/**
     * <code>repeated float lfTireWear = 4;</code>
     * @param value The lfTireWear to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignLfTireWear")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, LfTireWearProxy>.plusAssign(value: kotlin.Float) {
      add(value)
    }/**
     * <code>repeated float lfTireWear = 4;</code>
     * @param values The lfTireWear to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllLfTireWear")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, LfTireWearProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Float>) {
      _builder.addAllLfTireWear(values)
    }/**
     * <code>repeated float lfTireWear = 4;</code>
     * @param values The lfTireWear to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllLfTireWear")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, LfTireWearProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Float>) {
      addAll(values)
    }/**
     * <code>repeated float lfTireWear = 4;</code>
     * @param index The index to set the value at.
     * @param value The lfTireWear to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setLfTireWear")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, LfTireWearProxy>.set(index: kotlin.Int, value: kotlin.Float) {
      _builder.setLfTireWear(index, value)
    }/**
     * <code>repeated float lfTireWear = 4;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearLfTireWear")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, LfTireWearProxy>.clear() {
      _builder.clearLfTireWear()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class LrTireWearProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated float lrTireWear = 5;</code>
     */
     public val lrTireWear: com.google.protobuf.kotlin.DslList<kotlin.Float, LrTireWearProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getLrTireWearList()
      )
    /**
     * <code>repeated float lrTireWear = 5;</code>
     * @param value The lrTireWear to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addLrTireWear")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, LrTireWearProxy>.add(value: kotlin.Float) {
      _builder.addLrTireWear(value)
    }/**
     * <code>repeated float lrTireWear = 5;</code>
     * @param value The lrTireWear to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignLrTireWear")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, LrTireWearProxy>.plusAssign(value: kotlin.Float) {
      add(value)
    }/**
     * <code>repeated float lrTireWear = 5;</code>
     * @param values The lrTireWear to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllLrTireWear")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, LrTireWearProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Float>) {
      _builder.addAllLrTireWear(values)
    }/**
     * <code>repeated float lrTireWear = 5;</code>
     * @param values The lrTireWear to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllLrTireWear")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, LrTireWearProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Float>) {
      addAll(values)
    }/**
     * <code>repeated float lrTireWear = 5;</code>
     * @param index The index to set the value at.
     * @param value The lrTireWear to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setLrTireWear")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, LrTireWearProxy>.set(index: kotlin.Int, value: kotlin.Float) {
      _builder.setLrTireWear(index, value)
    }/**
     * <code>repeated float lrTireWear = 5;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearLrTireWear")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, LrTireWearProxy>.clear() {
      _builder.clearLrTireWear()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RfTireWearProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated float rfTireWear = 6;</code>
     */
     public val rfTireWear: com.google.protobuf.kotlin.DslList<kotlin.Float, RfTireWearProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRfTireWearList()
      )
    /**
     * <code>repeated float rfTireWear = 6;</code>
     * @param value The rfTireWear to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRfTireWear")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, RfTireWearProxy>.add(value: kotlin.Float) {
      _builder.addRfTireWear(value)
    }/**
     * <code>repeated float rfTireWear = 6;</code>
     * @param value The rfTireWear to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRfTireWear")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, RfTireWearProxy>.plusAssign(value: kotlin.Float) {
      add(value)
    }/**
     * <code>repeated float rfTireWear = 6;</code>
     * @param values The rfTireWear to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRfTireWear")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, RfTireWearProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Float>) {
      _builder.addAllRfTireWear(values)
    }/**
     * <code>repeated float rfTireWear = 6;</code>
     * @param values The rfTireWear to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRfTireWear")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, RfTireWearProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Float>) {
      addAll(values)
    }/**
     * <code>repeated float rfTireWear = 6;</code>
     * @param index The index to set the value at.
     * @param value The rfTireWear to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRfTireWear")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, RfTireWearProxy>.set(index: kotlin.Int, value: kotlin.Float) {
      _builder.setRfTireWear(index, value)
    }/**
     * <code>repeated float rfTireWear = 6;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRfTireWear")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, RfTireWearProxy>.clear() {
      _builder.clearRfTireWear()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RrTireWearProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated float rrTireWear = 7;</code>
     */
     public val rrTireWear: com.google.protobuf.kotlin.DslList<kotlin.Float, RrTireWearProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRrTireWearList()
      )
    /**
     * <code>repeated float rrTireWear = 7;</code>
     * @param value The rrTireWear to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRrTireWear")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, RrTireWearProxy>.add(value: kotlin.Float) {
      _builder.addRrTireWear(value)
    }/**
     * <code>repeated float rrTireWear = 7;</code>
     * @param value The rrTireWear to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRrTireWear")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, RrTireWearProxy>.plusAssign(value: kotlin.Float) {
      add(value)
    }/**
     * <code>repeated float rrTireWear = 7;</code>
     * @param values The rrTireWear to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRrTireWear")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, RrTireWearProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Float>) {
      _builder.addAllRrTireWear(values)
    }/**
     * <code>repeated float rrTireWear = 7;</code>
     * @param values The rrTireWear to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRrTireWear")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, RrTireWearProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Float>) {
      addAll(values)
    }/**
     * <code>repeated float rrTireWear = 7;</code>
     * @param index The index to set the value at.
     * @param value The rrTireWear to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRrTireWear")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, RrTireWearProxy>.set(index: kotlin.Int, value: kotlin.Float) {
      _builder.setRrTireWear(index, value)
    }/**
     * <code>repeated float rrTireWear = 7;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRrTireWear")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, RrTireWearProxy>.clear() {
      _builder.clearRrTireWear()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class LfTireTempProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated float lfTireTemp = 8;</code>
     */
     public val lfTireTemp: com.google.protobuf.kotlin.DslList<kotlin.Float, LfTireTempProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getLfTireTempList()
      )
    /**
     * <code>repeated float lfTireTemp = 8;</code>
     * @param value The lfTireTemp to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addLfTireTemp")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, LfTireTempProxy>.add(value: kotlin.Float) {
      _builder.addLfTireTemp(value)
    }/**
     * <code>repeated float lfTireTemp = 8;</code>
     * @param value The lfTireTemp to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignLfTireTemp")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, LfTireTempProxy>.plusAssign(value: kotlin.Float) {
      add(value)
    }/**
     * <code>repeated float lfTireTemp = 8;</code>
     * @param values The lfTireTemp to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllLfTireTemp")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, LfTireTempProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Float>) {
      _builder.addAllLfTireTemp(values)
    }/**
     * <code>repeated float lfTireTemp = 8;</code>
     * @param values The lfTireTemp to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllLfTireTemp")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, LfTireTempProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Float>) {
      addAll(values)
    }/**
     * <code>repeated float lfTireTemp = 8;</code>
     * @param index The index to set the value at.
     * @param value The lfTireTemp to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setLfTireTemp")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, LfTireTempProxy>.set(index: kotlin.Int, value: kotlin.Float) {
      _builder.setLfTireTemp(index, value)
    }/**
     * <code>repeated float lfTireTemp = 8;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearLfTireTemp")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, LfTireTempProxy>.clear() {
      _builder.clearLfTireTemp()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class LrTireTempProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated float lrTireTemp = 9;</code>
     */
     public val lrTireTemp: com.google.protobuf.kotlin.DslList<kotlin.Float, LrTireTempProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getLrTireTempList()
      )
    /**
     * <code>repeated float lrTireTemp = 9;</code>
     * @param value The lrTireTemp to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addLrTireTemp")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, LrTireTempProxy>.add(value: kotlin.Float) {
      _builder.addLrTireTemp(value)
    }/**
     * <code>repeated float lrTireTemp = 9;</code>
     * @param value The lrTireTemp to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignLrTireTemp")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, LrTireTempProxy>.plusAssign(value: kotlin.Float) {
      add(value)
    }/**
     * <code>repeated float lrTireTemp = 9;</code>
     * @param values The lrTireTemp to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllLrTireTemp")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, LrTireTempProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Float>) {
      _builder.addAllLrTireTemp(values)
    }/**
     * <code>repeated float lrTireTemp = 9;</code>
     * @param values The lrTireTemp to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllLrTireTemp")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, LrTireTempProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Float>) {
      addAll(values)
    }/**
     * <code>repeated float lrTireTemp = 9;</code>
     * @param index The index to set the value at.
     * @param value The lrTireTemp to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setLrTireTemp")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, LrTireTempProxy>.set(index: kotlin.Int, value: kotlin.Float) {
      _builder.setLrTireTemp(index, value)
    }/**
     * <code>repeated float lrTireTemp = 9;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearLrTireTemp")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, LrTireTempProxy>.clear() {
      _builder.clearLrTireTemp()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RfTireTempProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated float rfTireTemp = 10;</code>
     */
     public val rfTireTemp: com.google.protobuf.kotlin.DslList<kotlin.Float, RfTireTempProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRfTireTempList()
      )
    /**
     * <code>repeated float rfTireTemp = 10;</code>
     * @param value The rfTireTemp to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRfTireTemp")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, RfTireTempProxy>.add(value: kotlin.Float) {
      _builder.addRfTireTemp(value)
    }/**
     * <code>repeated float rfTireTemp = 10;</code>
     * @param value The rfTireTemp to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRfTireTemp")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, RfTireTempProxy>.plusAssign(value: kotlin.Float) {
      add(value)
    }/**
     * <code>repeated float rfTireTemp = 10;</code>
     * @param values The rfTireTemp to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRfTireTemp")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, RfTireTempProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Float>) {
      _builder.addAllRfTireTemp(values)
    }/**
     * <code>repeated float rfTireTemp = 10;</code>
     * @param values The rfTireTemp to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRfTireTemp")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, RfTireTempProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Float>) {
      addAll(values)
    }/**
     * <code>repeated float rfTireTemp = 10;</code>
     * @param index The index to set the value at.
     * @param value The rfTireTemp to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRfTireTemp")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, RfTireTempProxy>.set(index: kotlin.Int, value: kotlin.Float) {
      _builder.setRfTireTemp(index, value)
    }/**
     * <code>repeated float rfTireTemp = 10;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRfTireTemp")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, RfTireTempProxy>.clear() {
      _builder.clearRfTireTemp()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RrTireTempProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated float rrTireTemp = 11;</code>
     */
     public val rrTireTemp: com.google.protobuf.kotlin.DslList<kotlin.Float, RrTireTempProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRrTireTempList()
      )
    /**
     * <code>repeated float rrTireTemp = 11;</code>
     * @param value The rrTireTemp to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRrTireTemp")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, RrTireTempProxy>.add(value: kotlin.Float) {
      _builder.addRrTireTemp(value)
    }/**
     * <code>repeated float rrTireTemp = 11;</code>
     * @param value The rrTireTemp to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRrTireTemp")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, RrTireTempProxy>.plusAssign(value: kotlin.Float) {
      add(value)
    }/**
     * <code>repeated float rrTireTemp = 11;</code>
     * @param values The rrTireTemp to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRrTireTemp")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, RrTireTempProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Float>) {
      _builder.addAllRrTireTemp(values)
    }/**
     * <code>repeated float rrTireTemp = 11;</code>
     * @param values The rrTireTemp to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRrTireTemp")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, RrTireTempProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Float>) {
      addAll(values)
    }/**
     * <code>repeated float rrTireTemp = 11;</code>
     * @param index The index to set the value at.
     * @param value The rrTireTemp to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRrTireTemp")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, RrTireTempProxy>.set(index: kotlin.Int, value: kotlin.Float) {
      _builder.setRrTireTemp(index, value)
    }/**
     * <code>repeated float rrTireTemp = 11;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRrTireTemp")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Float, RrTireTempProxy>.clear() {
      _builder.clearRrTireTemp()
    }
    /**
     * <code>optional int32 tireSetsAvailable = 12;</code>
     */
    public var tireSetsAvailable: kotlin.Int
      @JvmName("getTireSetsAvailable")
      get() = _builder.getTireSetsAvailable()
      @JvmName("setTireSetsAvailable")
      set(value) {
        _builder.setTireSetsAvailable(value)
      }
    /**
     * <code>optional int32 tireSetsAvailable = 12;</code>
     */
    public fun clearTireSetsAvailable() {
      _builder.clearTireSetsAvailable()
    }
    /**
     * <code>optional int32 tireSetsAvailable = 12;</code>
     * @return Whether the tireSetsAvailable field is set.
     */
    public fun hasTireSetsAvailable(): kotlin.Boolean {
      return _builder.hasTireSetsAvailable()
    }

    /**
     * <code>optional int32 tireSetsUsed = 13;</code>
     */
    public var tireSetsUsed: kotlin.Int
      @JvmName("getTireSetsUsed")
      get() = _builder.getTireSetsUsed()
      @JvmName("setTireSetsUsed")
      set(value) {
        _builder.setTireSetsUsed(value)
      }
    /**
     * <code>optional int32 tireSetsUsed = 13;</code>
     */
    public fun clearTireSetsUsed() {
      _builder.clearTireSetsUsed()
    }
    /**
     * <code>optional int32 tireSetsUsed = 13;</code>
     * @return Whether the tireSetsUsed field is set.
     */
    public fun hasTireSetsUsed(): kotlin.Boolean {
      return _builder.hasTireSetsUsed()
    }

    /**
     * <code>optional int32 pitServiceStatus = 14;</code>
     */
    public var pitServiceStatus: kotlin.Int
      @JvmName("getPitServiceStatus")
      get() = _builder.getPitServiceStatus()
      @JvmName("setPitServiceStatus")
      set(value) {
        _builder.setPitServiceStatus(value)
      }
    /**
     * <code>optional int32 pitServiceStatus = 14;</code>
     */
    public fun clearPitServiceStatus() {
      _builder.clearPitServiceStatus()
    }
    /**
     * <code>optional int32 pitServiceStatus = 14;</code>
     * @return Whether the pitServiceStatus field is set.
     */
    public fun hasPitServiceStatus(): kotlin.Boolean {
      return _builder.hasPitServiceStatus()
    }

    /**
     * <code>optional int32 flagStatus = 15;</code>
     */
    public var flagStatus: kotlin.Int
      @JvmName("getFlagStatus")
      get() = _builder.getFlagStatus()
      @JvmName("setFlagStatus")
      set(value) {
        _builder.setFlagStatus(value)
      }
    /**
     * <code>optional int32 flagStatus = 15;</code>
     */
    public fun clearFlagStatus() {
      _builder.clearFlagStatus()
    }
    /**
     * <code>optional int32 flagStatus = 15;</code>
     * @return Whether the flagStatus field is set.
     */
    public fun hasFlagStatus(): kotlin.Boolean {
      return _builder.hasFlagStatus()
    }

    /**
     * <code>optional int32 engineWarnings = 16;</code>
     */
    public var engineWarnings: kotlin.Int
      @JvmName("getEngineWarnings")
      get() = _builder.getEngineWarnings()
      @JvmName("setEngineWarnings")
      set(value) {
        _builder.setEngineWarnings(value)
      }
    /**
     * <code>optional int32 engineWarnings = 16;</code>
     */
    public fun clearEngineWarnings() {
      _builder.clearEngineWarnings()
    }
    /**
     * <code>optional int32 engineWarnings = 16;</code>
     * @return Whether the engineWarnings field is set.
     */
    public fun hasEngineWarnings(): kotlin.Boolean {
      return _builder.hasEngineWarnings()
    }

    /**
     * <code>optional int32 carsInProximity = 17;</code>
     */
    public var carsInProximity: kotlin.Int
      @JvmName("getCarsInProximity")
      get() = _builder.getCarsInProximity()
      @JvmName("setCarsInProximity")
      set(value) {
        _builder.setCarsInProximity(value)
      }
    /**
     * <code>optional int32 carsInProximity = 17;</code>
     */
    public fun clearCarsInProximity() {
      _builder.clearCarsInProximity()
    }
    /**
     * <code>optional int32 carsInProximity = 17;</code>
     * @return Whether the carsInProximity field is set.
     */
    public fun hasCarsInProximity(): kotlin.Boolean {
      return _builder.hasCarsInProximity()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun streaming.Streaming.Car.copy(block: streaming.CarKt.Dsl.() -> kotlin.Unit): streaming.Streaming.Car =
  streaming.CarKt.Dsl._create(this.toBuilder()).apply { block() }._build()
